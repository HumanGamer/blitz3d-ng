module Blitz3D
  module Tools
    module Config
      PREMAKE_DIR = 'src/runtime/premake'
      STUB_DIR    = File.join(PREMAKE_DIR, 'stubs')

      def file_has_changed?(file, string)
        File.open(file).read != string
      rescue Errno::ENOENT
        true
      end

      def stub(mod)
        f = StringIO.new
        f.write "// AUTOGENERATED. DO NOT EDIT.\n"
        f.write "// RUN `bin/blitz3d config` TO UPDATE.\n\n"
        f.write "#include <bb/blitz/module.h>\n"
        f.write "#include <bb/#{mod.id}/#{mod.id}.h>\n\n"
        f.write "BBMODULE_LINK( #{mod.id} ){\n"
        mod.commands.each do |command|
          params = command.params.map(&:to_rtsym)
          f.write "\trtSym( \"#{command.return_type}#{command.name}#{params.join('')}\",#{command.symbol} );\n"
        end
        f.write "}\n"

        out_file = File.join(STUB_DIR, "#{mod.id}.cpp")

        if file_has_changed?(out_file, f.string)
          FileUtils.mkdir_p STUB_DIR
          File.open(out_file, 'w') { |h| h.write f.string }
        end
      end

      def premake(mod)
        FileUtils.mkdir_p PREMAKE_DIR

        File.open(File.join(PREMAKE_DIR, "#{mod.id}.lua"), 'w') do |f|
          f.write "-- AUTOGENERATED. DO NOT EDIT.\n"
          f.write "-- RUN `bin/blitz3d config` TO UPDATE.\n"
          f.write "project '#{mod.id}'\n"
          f.write "  kind 'StaticLib'\n"
          f.write "  language 'C++'\n\n"

          unless mod.dependencies.nil? || mod.dependencies.empty?
            f.write "  links { "
            f.write mod.dependencies.map { |f| "'#{f}'" }.join(', ')
            f.write " }\n\n"
          end

          f.write "  files 'stubs/#{mod.id}.cpp'\n\n"

          mod.premake5.each_pair do |key, value|
            case key
            when 'files'
              files = value.map { |path| File.join('..', '..', '..', mod.path, path) }

              f.write "  files { "
              f.write files.map { |f| "'#{f}'" }.join(', ')
              f.write " }\n"
            else
              throw "unhandled key: '#{key}' in #{mod.name.bold}"
            end
          end
        end
      end

      def run
        FileUtils.mkdir_p PREMAKE_DIR

        File.open(File.join(PREMAKE_DIR, 'init.lua'), 'w') do |f|
          f.write "-- AUTOGENERATED. DO NOT EDIT.\n"
          f.write "-- RUN `bin/blitz3d config` TO UPDATE.\n\n"

          Module.all.each do |mod|
            premake mod
            stub mod
            f.write "require('./#{mod.id}')\n"
          end
        end
      end
    end
  end
end
