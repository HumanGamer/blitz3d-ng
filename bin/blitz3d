#!/usr/bin/env ruby

## WARNING: This file is VERY ugly & quite the hackjob.

require 'bundler'
Bundler.require :default

require 'yaml'
require 'erb'
require 'json'

module Blitz3D
  define_singleton_method(:path) { __FILE__ }
end

require_relative '../lib/blitz3d/cli'


def run(mod, &block)
  Class.new { extend mod }.run(*block.try(:yield))
end

command = ARGV[0]

case command
when 'run'
  if ARGV.include?('-r')
    runtime = ARGV[ARGV.find_index('-r') + 1] || []
  else
    runtime = 'opengl'
  end

  if runtime.nil?
    puts "Missing runtime.".red
    exit 1
  end

  in_file = ARGV[-1]
  out_file = Tempfile.new('blitzcc')

  `_release/bin/blitzcc -r #{runtime || 'opengl'} +q -d -j #{in_file} | bin/ast2c | clang++ -o #{out_file.path} -x c - \`bin/bb-config --#{runtime}\``
  `#{out_file.path}`
  out_file.unlink
when 'help'
  if ARGV.include?('--lint')
    module_names = [ARGV[ARGV.find_index('--lint') + 1]] || []
    run(Blitz3D::Tools::Lint) { [module_names] }
  end

  if ARGV.include?('--import')
    module_name = ARGV[ARGV.find_index('--import') + 1]
    if module_name.blank?
      puts "Invalid module name given for import.".red
      exit 1
    end
    run(Blitz3D::Tools::Import) { module_name }
  end

  if ARGV.include?('--build')
    # begin
      run Blitz3D::Tools::Help
    # rescue StandardError => e
    #   puts e
    # end

    if ARGV.include?('--watch')
      puts 'Watching for changes...'.yellow
      FileWatcher.new(['src/docs', 'src/runtime/**/*.md']).watch do
        begin
          run Blitz3D::Tools::Help
        rescue StandardError => e
          puts e
        end
      end
    end
  end
when 'import'
when 'config'
  run Blitz3D::Tools::Config
else
  puts 'blitz3d - build tool'
  puts 'usage: blitz3d [action] [options]'
  puts
  puts 'available actions:'
  puts "  #{'help'.bold}     build help pages"
  puts "            #{'--lint'.bold}: check help files for problems"
  puts
  puts "  #{'config'.bold}   generate module & runtime configs"
  puts
end
