// AUTOGENERATED. DO NOT EDIT.
// RUN `bin/blitz3d config` TO UPDATE.

#include <bb/blitz/module.h>
#include <bb/ode/ode.h>

#ifdef WIN32
BBMODULE_LINK( ode ){
	rtSym( "%dBodyCreate%world",_odeBodyCreate );
	rtSym( "dBodySetAutoDisableFlag%body%do_auto_disable",_odeBodySetAutoDisableFlag );
	rtSym( "dBodySetPosition%body#x#y#z",_odeBodySetPosition );
	rtSym( "dBodySetRotation%body#pitch#yaw#roll",_odeBodySetRotation );
	rtSym( "dCloseODE",_odeCloseODE );
	rtSym( "#dContactGetBounce",_odeContactGetBounce );
	rtSym( "#dContactGetBounceVel",_odeContactGetBounceVel );
	rtSym( "dContactGetFDir1",_odeContactGetFDir1 );
	rtSym( "%dContactGetMaxContacts",_odeContactGetMaxContacts );
	rtSym( "%dContactGetMode",_odeContactGetMode );
	rtSym( "#dContactGetMotion1",_odeContactGetMotion1 );
	rtSym( "#dContactGetMotion2",_odeContactGetMotion2 );
	rtSym( "#dContactGetMu",_odeContactGetMu );
	rtSym( "#dContactGetMu2",_odeContactGetMu2 );
	rtSym( "#dContactGetSlip1",_odeContactGetSlip1 );
	rtSym( "#dContactGetSlip2",_odeContactGetSlip2 );
	rtSym( "#dContactGetSoftCFM",_odeContactGetSoftCFM );
	rtSym( "#dContactGetSoftERP",_odeContactGetSoftERP );
	rtSym( "dContactSetBounce#bounce",_odeContactSetBounce );
	rtSym( "dContactSetBounceVel#vel",_odeContactSetBounceVel );
	rtSym( "dContactSetFDir1#fdir1x#fdir1y#fdir1z",_odeContactSetFDir1 );
	rtSym( "dContactSetMaxContacts%max",_odeContactSetMaxContacts );
	rtSym( "dContactSetMode%mode",_odeContactSetMode );
	rtSym( "dContactSetMotion1#motion",_odeContactSetMotion1 );
	rtSym( "dContactSetMotion2#motion",_odeContactSetMotion2 );
	rtSym( "dContactSetMu#mu",_odeContactSetMu );
	rtSym( "dContactSetMu2#mu",_odeContactSetMu2 );
	rtSym( "dContactSetSlip1#slip",_odeContactSetSlip1 );
	rtSym( "dContactSetSlip2#slip",_odeContactSetSlip2 );
	rtSym( "dContactSetSoftCFM#cfm",_odeContactSetSoftCFM );
	rtSym( "dContactSetSoftERP#erp",_odeContactSetSoftERP );
	rtSym( "%dCreateBox%space#lx#ly#lz",_odeCreateBox );
	rtSym( "%dCreatePlane%space#a#b#c#d",_odeCreatePlane );
	rtSym( "%dDemoTime",_odeDemoTime );
	rtSym( "#dGeomGetPitch%geom",_odeGeomGetPitch );
	rtSym( "#dGeomGetPositionX%geom",_odeGeomGetPositionX );
	rtSym( "#dGeomGetPositionY%geom",_odeGeomGetPositionY );
	rtSym( "#dGeomGetPositionZ%geom",_odeGeomGetPositionZ );
	rtSym( "#dGeomGetRoll%geom",_odeGeomGetRoll );
	rtSym( "#dGeomGetYaw%geom",_odeGeomGetYaw );
	rtSym( "dGeomSetBody%geom%body",_odeGeomSetBody );
	rtSym( "dGeomSyncEntity%geom%entity",_odeGeomSyncEntity );
	rtSym( "#dGetVersion",_odeGetVersion );
	rtSym( "%dHashSpaceCreate%space",_odeHashSpaceCreate );
	rtSym( "dInitODE",_odeInitODE );
	rtSym( "%dJointGroupCreate%max_size",_odeJointGroupCreate );
	rtSym( "%dJointGroupDestroy%group",_odeJointGroupDestroy );
	rtSym( "%dJointGroupEmpty%group",_odeJointGroupEmpty );
	rtSym( "dRegisterODE%key1%key2%key3%key4",_odeRegisterODE );
	rtSym( "dSpaceCollide%space%world%group",_odeSpaceCollide );
	rtSym( "dSpaceDestroy%space",_odeSpaceDestroy );
	rtSym( "%dWorldCreate",_odeWorldCreate );
	rtSym( "dWorldDestroy%world",_odeWorldDestroy );
	rtSym( "%dWorldQuickStep%world#stepsize",_odeWorldQuickStep );
	rtSym( "dWorldSetAutoDisableFlag%world%do_auto_disable",_odeWorldSetAutoDisableFlag );
	rtSym( "dWorldSetGravity%world#x#y#z",_odeWorldSetGravity );
}
#endif
